# (C) 2015, Daniel McNeela - All Rights Reserved
#
# This file is part of the MATErix software application.
# MATErix is proprietary software and may not be used,
# distributed, copied, published, or in any way altered
# without the express written permission of Daniel McNeela.
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

Meet MATErix, your friend in all things linear algebra and in some things otherwise.

This manual contains information pertaining to the operation of MATErix.

Version: 1.0
Release Date: April 4, 2015
Author: Daniel McNeela

------------ Table of Contents --------------
  1. Installing MATErix                     |
  2. Running MATErix from the Command-Line  |
  3. Command Line Options                   | 
  4. Adding Matrices                        |
  5. Multiplying Matrices                   |
  6. Formatting Matrix Input                |
  7. Viewing Output                         |
  8. Viewing Performance Data               |
  9. Bugfixes                               |
 10. Upcoming Features                      |
---------------------------------------------

---- Section 1: Installing MATErix ----

**** Note: MATErix has only been tested using Windows 7 ****
**** and the Python 3 interpreter. While MATErix may work **
**** with other systems, functionality has not been tested.*

MATErix is a Python script. As such, users must have Python 3
installed on their system in order to run MATErix. Python can
be freely downloaded and installed from https://www.python.org/

Once Python is installed, the MATErix source folder should be
copied to the directory on the user's machine from which the
user desires to run the program. 

---- Section 2: Running MATErix from the Command Line ----

To run MATErix, open your system's terminal and navigate
to the MATErix source folder. Once inside the MATErix
directory, the program can be run using the following
command:

  python MATErix.py <arguments>

At least one argument must be specified. A list of valid
arguments and a description of their functionality can
be found in the following section.

If at any point during your operation of MATErix you
are confused as to the program's functionality, run
either of the following commands:

  python MATErix.py -h

     -OR-

  python MATErix.py --help

---- Section 3: Command Line Options ----

As of Version 1.0, MATErix supports the following
command line arguments:

-h, --help
Running MATErix with this flag causes the program to print
a help message and then exit. All information specified in
the help message can also be found in this manual.

-a, --add	     
Use this flag if you want to use MATErix for matrix addition.
Only one of the -a and -m flags can be specified at a time.

-m, --multiply ALGORITHM
Use this flag if you want to use MATErix for matrix multiplication.
This flag requires the specifying of the positional argument, ALGORITHM.
The available choices for this positional argument are:

    iterative

     -AND-

    strassen

If 'iterative' is specified then MATErix multiplies the inputted
matrices using a basic iterative algorithm. This algorithm is ideal
for multiplying matrices of relatively small dimensions. For matrices
of larger dimensions, the strassen provides a noticeable speedup in
performance.

If 'strassen' is specified then MATErix multiplies the inputted
matrices using the Strassen algorithm for matrix multiplication
developed by Volker Strassen. Useful for matrices of large dimensions.
More information about the algorithm can be found here:

     http://en.wikipedia.org/wiki/Strassen_algorithm

Only one of the -a and -m flags can be specified at a time.

-t, --time
To be used in conjunction with either of the -a or -m flags.
If neither flag is specified, "-m iterative" is assumed.

Use of the -t/--time flag activates MATErix's built-in
performance-monitoring functionality. If this flag is
specified, MATErix will gather information related to
the execution time of either the -a or -m algorithm(s)
and print the statistics to the file 'profile.txt'

Subsequent usage of the -t/--time flag on multiple
runs of MATErix appends newly-acquired performance
data to the 'profile.txt' file. In other words,
no overwriting occurs so as to allow for comparisons
of MATErix run times using different algorithms.

MATErix's performance-monitoring functionality makes
use of the built-in Python cProfile module. For more
information on the module and help with interpreting
the output it provides, please consult the following
webpage:

https://docs.python.org/2/library/profile.html

--version
Running this command will print the version of MATErix
being run.

---- Section 4: Adding Matrices ----

MATErix allows for the adding of an arbitrary
number of matrices. To add matrices run either of
the following from the command-line:

    python MATErix.py -a

      -OR-

    python MATErix.py --add

After running one of these commands, a message will
appear in your terminal window prompting you for input.

You should enter the number of matrices you wish to add
followed by a dash and then the sequence of dimensions
of the matrices you wish to add, separated by dashes.

The dimensions should be typed in one of the two
*equivalent* following formats:

    [height, width]

      -OR-

    [number of rows, number of columns]

EXAMPLES:

	1. Say you want to add two, 3x3 matrices. You would input
	
	       2 - [3, 3] - [3, 3]

	2. Say you want to add 4, 5x7 matrices. You would input

	       4 - [5, 7] - [5, 7] - [5, 7] - [5, 7]

	3. The following input will cause an error:

	       3 - [2, 4] - [2, 4] - [3, 2]
	
Note that for matrix addition to be a valid operation
all of the matrices to be multiplied must be of the same
dimensions. If you attempt to add matrices of unequal dimensions,
MATErix will throw an assertion error and exit.

After inputting the desired specifications in the correct format
hit enter.

---- Section 5: Multiplying Matrices ----

MATErix allows for the multiplying of an arbitrary
number of matrices. To multiply matrices run either of
the following from the command-line:

    python MATErix.py -m

      -OR-

    python MATErix.py --multiply

After running one of these commands, a message will
appear in your terminal window prompting you for input.

You should enter the number of matrices you wish to multiply
followed by a dash and then the sequence of dimensions
of the matrices you wish to multiply, separated by dashes.

The dimensions should be typed in one of the two
*equivalent* following formats:

    [height, width]

      -OR-

    [number of rows, number of columns]

EXAMPLES:

	1. Say you want to multiply a 2x3 and a 3x5 matrix. You would input
	
	       2 - [2, 3] - [3, 5]

	2. Say you want to multiply a 5x7, 7x4, 4x3, and 3x3 matrix. You would input

	       4 - [5, 7] - [7, 4] - [4, 3] - [3, 3]

	3. The following input will cause an error:

	       3 - [2, 4] - [3, 2] - [2, 2]
	
Note that for matrix multiplication to be a valid operation
the number of columns of the first matrix in each pair must equal
the number of rows of the second matrix in each pair. If you attempt
to multiply matrices of unequal dimensions, MATErix will throw an assertion error and exit.

After inputting the desired specifications in the correct format
hit enter.

---- Section 6: Formatting Matrix Input ----

After specifying information regarding the matrices you wish MATErix
to operate on and hitting enter, MATErix will create a file, 'input.txt',
in the current working directory and format it for the inputting
of matrix values based on the specifications you provided. MATErix
will then open the file using your system's default text editor
and wait for you to enter the values for the matrices you wish to add/multiply

For example, if you entered:

	 2 - [3, 3] - [3, 3]

MATErix would open the file 'input.txt'. The file would have the following
text pre-written to it:

	Replace the underscores with the entries for each matrix you wish to multiply.

	Matrix 1:

	|_ _ _|
	|_ _ _|
	|_ _ _|

	Matrix 2:

	|_ _ _|
	|_ _ _|
	|_ _ _|

Each underscore is a placeholder and should be replaced with the matrix entry
located in the corresponding position. After populating each matrix, the file
should look something like this.

	Replace the underscores with the entries for each matrix you wish to multiply.

	Matrix 1:

	|-1 0 7|
	|.5 6 -9|
	|.2813 48.36 -12|

	Matrix 2:

	|1 -35.6 2|
	|0 1 4|
	|985 -1982837 21|

Don't worry if the values in the matrices aren't aligned after you enter them.
MATErix will still be able to read your input. That said, you must enter a value
IN PLACE of each underscore, and that value must be a valid floating-point number.

After entering the matrix values, save the text file, close it, and hit enter at
the command line.

---- Section 7: Viewing Output ----

After working it's magic on your input, MATErix will create a file, 'output.txt',
in the current working directory and write the representation of the matrix resulting
from the selected operations applied to your input. MATErix will then open this
file using your system's default text editor for your viewing convenience.

For example, if you multiplied the two matrices given in the example above, matrix
would open the file 'output.txt' which would have the following text written to it:

| 6894.0             -13879823.400000002 145.0   |
|-8864.5              17845521.2         -164.0  |
|-11819.7187          23794082.345719997 -57.9974|


The advantages of writing the matrix result to a text file rather than printing
to the console window are myriad. If desired, you may perform postprocessing on
the output, feed the data to another program, save it for later use, or even
use it as input to another call to MATErix. The possibilities are endless!

---- Section 8: Viewing Performance Data ----

If you run MATErix using the -t/--time tag, you will be provided with an
analysis of the various function calls made in the process of computing
the requested operations applied to your input matrices. This analysis
will be compiled to a file, 'profile.txt', in the current working directory
from which you can view the results.

---- Section 9: Bugfixes ----

As with any software, it is quite possible that there are bugs in MATErix.
Should you become aware of any issues in your operation of MATErix, please
submit a bugfix request using the "issues" tab of the MATErix project page
on Github.

---- Section 10: Upcoming Features ----

MATErix is under continuous development. Check back often
for updates and new versions. In future releases, the author
hopes to add the following features:

   1. The ability to calculate determinants using a variety of algorithms.
   2. The ability to compute the row-reduced echelon form of a matrix.
   3. The ability to produce the inverse of a matrix.
   4. Support for Jordan form.
   5. The implementation of additional multiplication algorithms.

...and much more. Stay tuned!




